apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "development.dreamcatcher.newsdemoapp"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 2
        versionName "1.1"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    def lifecycle_version = '1.1.1'
    def androidx_appcompat_version = '1.3.0-alpha02'
    def androidx_core_version = '1.5.0-alpha02'
    def androidx_constraint_layout_version = '2.0.1'
    def dagger2_version = '2.27'
    def javax_annotation_version = '3.1.1'
    def room_version = '2.2.5'
    def google_material_version = '1.2.1'
    def junit_version = '4.13'
    def mockito_core_version = '2.19.0'
    def mockito_inline_version = '2.13.0'
    def core_testing_version = '1.1.1'
    def espresso_version = '3.3.0'
    def androidx_test_version = '1.3.0'
    def hamcrest_version = '1.3'
    def retrofit_version = '2.4.0'
    def retrofit_mock_version = '2.2.0'
    def gson_converter_version = '2.3.0'
    def gson_version = '2.8.2'
    def coroutines_version = '1.1.1'
    def circleimageview_version = '3.1.0'
    def glide_version = '4.11.0'

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Kotlin standard library
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // Lifecycle components
    implementation "android.arch.lifecycle:extensions:$lifecycle_version"
    kapt "android.arch.lifecycle:compiler:$lifecycle_version"

    // AndroidX
    implementation "androidx.appcompat:appcompat:$androidx_appcompat_version"
    implementation "androidx.core:core-ktx:$androidx_core_version"
    implementation "androidx.constraintlayout:constraintlayout:$androidx_constraint_layout_version"

    // Dagger 2
    implementation "com.google.dagger:dagger:$dagger2_version"
    kapt "com.google.dagger:dagger-compiler:$dagger2_version"
    compileOnly "org.glassfish:javax.annotation:$javax_annotation_version"

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-rxjava2:$room_version"

    // Google Material IO
    implementation "com.google.android.material:material:$google_material_version"

    // Unit Testing
    testImplementation "junit:junit:$junit_version"
    testImplementation "org.mockito:mockito-core:$mockito_core_version"
    testImplementation "org.mockito:mockito-inline:$mockito_inline_version"
    testImplementation "android.arch.core:core-testing:$core_testing_version"

    // UI Testing
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espresso_version"
    androidTestImplementation "androidx.test:runner:$androidx_test_version"
    androidTestImplementation "androidx.test:rules:$androidx_test_version"
    testImplementation "org.hamcrest:hamcrest-all:$hamcrest_version"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    implementation "com.squareup.retrofit2:retrofit-mock:$retrofit_mock_version"
    implementation "com.squareup.retrofit2:converter-gson:$gson_converter_version"

    // GSON
    implementation "com.google.code.gson:gson:$gson_version"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    // CircleImageView
    implementation "de.hdodenhof:circleimageview:$circleimageview_version"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    implementation "com.github.bumptech.glide:annotations:$glide_version"
    annotationProcessor "com.github.bumptech.glide:compiler:$glide_version"
}